generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cars {
  id           Int       @id @default(autoincrement())
  make         String?
  model        String?
  year         Int?
  color        String?
  body         String?
  transmission String?
  drivetype    String?
  fueltype     String?
  latitude     Float?
  price        Int?
  longitude    Float?
  rentals      Rentals[]
}

model Rentals {
  id         Int       @id @default(autoincrement())
  carid      Int?
  startdate  DateTime? @db.Date
  enddate    DateTime? @db.Date
  value      Int?
  userid     String?
  paymentid  String?
  receiptUrl String?
  cars       cars?     @relation(fields: [carid], references: [id])
  User       User?     @relation(fields: [userid], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id                    String    @id @default(cuid())
  name                  String?
  email                 String?   @unique
  emailVerified         DateTime?
  image                 String?
  role                  String?   @default("user")
  driversLicenseEmitted DateTime?
  driversLicenseExpires DateTime?

  accounts Account[]
  sessions Session[]
  Rentals  Rentals[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
